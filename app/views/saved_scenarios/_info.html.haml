%ul.details
  %li
    = area_flag_icon(scenario.area_code)
    %strong
      = t "areas.#{scenario.area_code}"
      = scenario.end_year
  %li
    = t('scenario.updated')
    = local_time(scenario.updated_at, :long)

  - if owned_saved_scenario?(scenario) && action_name == 'show'
    - if scenario.private?
      %li{ style: 'margin-left: auto; margin-right: 1rem; padding-right: 0' }
        .dropdown#scenario-privacy<>
          %button.scenario-actions#scenario-privacy-button{ aria: { expanded: 'false' }, data: { toggle: 'dropdown' }, type: 'button' }
            = inline_svg_tag 'hero/20/lock.svg', class: 'lock-icon'
            Private
            %span.fa.fa-caret-down
          %ul.dropdown-menu.dropdown-menu-right{ 'aria-labelledby': 'scenario-privacy-button', style: 'margin-top: -8px' }
            %li
              .info
                Only you can view or change this scenario.
            %li.sep-above
              = button_to publish_saved_scenario_path(@saved_scenario), method: :put, class: 'dropdown-item' do
                = inline_svg_tag 'hero/20/eye.svg'
                Make scenario public
    - else
      %li{ style: 'margin-left: auto; margin-right: 1rem; padding-right: 0' }
        .dropdown#scenario-privacy<>
          %button.scenario-actions#scenario-privacy-button{ aria: { expanded: 'false' }, data: { toggle: 'dropdown' }, type: 'button' }
            = inline_svg_tag 'hero/20/eye.svg', style: 'margin-right: 0.125rem'
            Public
            %span.fa.fa-caret-down
          %ul.dropdown-menu.dropdown-menu-right{ 'aria-labelledby': 'scenario-privacy-button', style: 'margin-top: -8px' }
            %li
              .info
                This scenario can be viewed or cloned by anyone, but only you can make changes.
            %li.sep-above
              = button_to unpublish_saved_scenario_path(@saved_scenario), method: :put, class: 'dropdown-item' do
                = inline_svg_tag 'hero/20/lock.svg', class: 'lock-icon'
                Make scenario private

    :javascript
      new DropdownView({ el: $('#scenario-privacy') }).render()

    %li{ style: 'padding-right: 0' }
      .dropdown#scenario-location<>
        %button.scenario-actions#scenario-location-button{ aria: { expanded: 'false' }, data: { toggle: 'dropdown' }, type: 'button' }
          = inline_svg_tag 'hero/20/cog.svg'
          = t('settings')
          %span.fa.fa-caret-down
        %ul.dropdown-menu.dropdown-menu-right{ 'aria-labelledby': 'scenario-location-button', style: 'margin-top: -8px' }
          %li
            = link_to t("scenario.edit_text"),
                edit_saved_scenario_path(scenario.id),
                remote: true,
                class: 'dropdown-item'
          - if current_user&.admin?
            %li
              - if @saved_scenario.featured?
                = link_to t('scenario.edit_featured_scenario'), saved_scenario_feature_path(@saved_scenario), class: 'dropdown-item'
              - else
                = link_to t('scenario.feature_scenario'), saved_scenario_feature_path(@saved_scenario), class: 'dropdown-item'
          %li.sep-above.category
            == #{t('move_to')}&hellip;
          - if scenario.discarded?
            %li
              = link_to t('header.load_scenario'), undiscard_saved_scenario_path(@saved_scenario, backto: 'scenario'), method: :put, class: 'dropdown-item'
          - if scenario.kept?
            %li
              = link_to t('trash'), discard_saved_scenario_path(@saved_scenario, backto: 'scenario'), method: :put, class: 'dropdown-item'

      :javascript
        new DropdownView({ el: $('#scenario-location') }).render()


.bar

= link_to t("scenario.load"),
    load_saved_scenario_path(scenario),
    class: "scenario-button button load"
